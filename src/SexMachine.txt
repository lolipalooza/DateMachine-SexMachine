{======================================================================
Custom thread - Sex Machine:
Entry Values:   0@: Pose
                1@: Place
                2@: Speed
                3@s: Gtx Actress Model
                5@s: Gtx Actor Model
                7@: mode (true: new mode, false(default): classic mode)

Esxample of use                    
0A92: create_custom_thread "SexMachine.s" pose 5 place 3 speed 40 fem_gxt 10@ 11@ male_gxt 20@ 21@
======================================================================}
{$CLEO .s}
thread 'SexMachine'

//0A93: end_custom_thread

{gosub @CmSexStart
if wasted_or_busted 
then gosub @CmSexEnd
end
gosub @CmSexCleanUp
end_thread}

if 7@ == true
then gosub @CmSexStart2
else gosub @CmSexStart
end
gosub @CmSexCleanUp
0A93: end_custom_thread

{======================================================================
======================================================================}
const
    // Entries
    SexPoseInt = 0@
    SexPlace = 1@
    SexStat_Speed = 2@    // (Int) Min: 1 - Max 100
    // 3@-4@, 5@-6@: female & male skin names
    // 7@: flag - classic mode or new mode (this is provisional)
    GenderFlag = 8@

    // Other Variables
    SexStat_Climax = 13@   // (Float) Min: 1.0 - Max 100.0
    SexStat_Pleasure = 14@ // (Int) From 1 to unlimited
    PornActress = 15@
    PornActor = 16@
    SexState = 17@
    OnSexActivity = 18@
    ClimaxState = 19@
    PleasureState = 20@
    SpeedState = 21@
    Dummy1 = 22@
    Dummy2 = 23@
    Dummy3 = 24@
    Dummy4 = 25@
    Dummy5 = 26@
    DummyString = 22@s
    SexMenuState = 27@
    ShowSexualStats = 28@
    SexBodyType = 29@
    PulseButtonState = 30@
    
    MoveAxisX = Dummy1
    MoveAxisY = Dummy2
    SpAxisX = Dummy3
    SpAxisY = Dummy4
    
    {===================================
    ====================================}
    FLAG_INCREASE = 1
    FLAG_DECREASE = 0
    
    FLAG_PAD_PRESS = 0
    FLAG_KEY_PRESS = 1

    FLAG_NORMAL_INT = 0
    FLAG_NORMAL_FLOAT = 1
    FLAG_PERCENTAGE_INT = 2
    FLAG_PERCENTAGE_FLOAT = 3
    
    FLAG_SX_MENU_LEFT = 0
    FLAG_SX_MENU_RIGHT = 1
    
    // Pose
    SEX_FUCKING = 0
    SEX_BJ      = 1
    SEX_ANAL    = 2
    SEX_HJ      = 3
    SEX_CUNNI   = 4
    SEX_69      = 5
    SEX_TJ      = 6
    SEX_FJ      = 7
    
    // Place
    PL_BED      = 0
    PL_SOFA     = 1
    PL_TABLE    = 2
    PL_CHAIR    = 3
    PL_FLOOR    = 4
    PL_BATH     = 5
    PL_KITCHEN  = 6
    PL_WALL     = 7
    PL_FOOT     = 8
    
    // Speed
    SPD_IDLE   = 0
    SPD_SLOW   = 1
    SPD_NORMAL = 2
    SPD_FAST   = 3

    BT_NORMAL = 0
    BT_LOLI = 1
    BT_BIG = 2
    
    SPD_THRESHOLD1 = 13 // Threshold to stop
    SPD_THRESHOLD2 = 52 // Threshold to pass from slow to normal
    SPD_THRESHOLD3 = 88 // Threshold to pass from normal to fast
    
    LOG_FILE = "modloader/date&sex/cleo/SexMachine.log"
    SEXPLACES_FILE = "data/SexPlaces.dat"
    ANIMATIONS_FILE = "data/SexAnimations.dat"
    COORDINATES_FILE = "data/SexCoordinates.dat"
    SAVE_FILE = "modloader/date&sex/savedata/SexMachine.sav"
    TEMP_FILE = "modloader/date&sex/savedata/SexMachine~"
    SEXFILES_FILE = "data/SexFiles.dat"
    
    // Generate sex files
    SEXFILES_MINIMUM_WAIT_TIME = 1200
                   
    // Sex Menu States
    SX_MENU_LEFT_FIRST_ELEM = 1
    SX_MENU_LEFT_LAST_ELEM = 3
    SX_MENU_OPT1_PLACES_FIRST_ELEM = 20
    SX_MENU_OPT1_PLACES_LAST_ELEM = 28
    SX_MENU_OPT2_POSITIONS_FIRST_ELEM = 40
    SX_MENU_OPT2_POSITIONS_LAST_ELEM = 47
    SX_MENU_OPT3_CAMERAS_FIRST_ELEM = 60
    SX_MENU_OPT3_CAMERAS_LAST_ELEM = 69

    // Pulsed button states
    NOT_PULSED = 0
    PULSED_UP = 10
    PULSED_DOWN = 20
    PULSED_ENTER_VEH = 30
    PULSED_SPRINT = 40
    PULSED_UP_F = 19
    PULSED_DOWN_F = 29
    PULSED_ENTER_VEH_F = 39
    PULSED_SPRINT_F = 49

    {===================================
    ====================================}
    PAD_CHANGE_CAMERA_VIEW = 13
    PAD_ANSWER_PHONE = 4
    PAD_PREV_WEP_ZOOM_IN = 5
    PAD_NEXT_WEP_ZOOM_OUT = 7
    PAD_ENTER_VEHICLE = 15
    PAD_SPRINT = 16
    PAD_FIREWEAPON = 17
    
    KEY_F6 = 117
    KEY_F3 = 114
    KEY_W = 87
    KEY_A = 65
    KEY_S = 83
    KEY_D = 68
    KEY_Q = 81
    KEY_E = 69
    KEY_SHIFT = 16
    
    {===================================
    ====================================}
    KEY_TOGGLE_SEX_MACHINE = KEY_F6
end

{======================================================================
======================================================================}
{$I SexMachine/AlternativeSexMachine.txt}
{$I SexMachine/ActorsAndPoses.txt}
{$I SexMachine/CamerasAndCoordinates.txt}
{$I SexMachine/CursorControl.txt}
{$I SexMachine/GenerateSexFiles.txt}
{$I SexMachine/SexualMenuAndStats.txt}
{$I SexMachine/SaveLoadMachine.txt}

{======================================================================
======================================================================}
:CmSexStart
$ONMISSION = 1

// Entry parameters
0AB1: @StoreActorsInfo 4 gxt_fem 3@ 4@ gtx_male 5@ 6@

OnSexActivity = false
gosub @ToggleSexMachine

while true
wait 0
    gosub @SexMachine
    if SexMenuState == 1
    then
        gosub @ShowSexualMenu
        if 0AB1: @CursorClickCheck 4 box_position 542.0 416.0 box_size 162.0 48.0 // Change Button Click
        then
            0AB1: @GetInt 1 @SxMn_Pose Dummy1
            0AB1: @GetInt 1 @SxMn_Place Dummy2
            0AB1: @SxMn_GetGXTPose 2 place Dummy2 offset Dummy1 ret Dummy3 Dummy4
            0AB1: @GetPoseFromString 2 Dummy3 Dummy4 ret Dummy1 Dummy5
            if or
            803B:   not Dummy1 == SexPoseInt  // (int)
            803B:   not Dummy2 == SexPlace  // (int)
            803B:   not Dummy5 == SexBodyType  // (int)
            then
                0085: SexPoseInt = Dummy1 // (int)
                0085: SexPlace = Dummy2 // (int)
                0085: SexBodyType = Dummy5 // (int)
                gosub @ChangePoseAndPlace
                SexMenuState = 0 // Close Sexual Menu
            end
        end
    end
    if SexMenuState == 2
    then
        0AB1: @ActorsOffsetsMenu 3 SexMenuState PornActress PornActor ret SexMenuState Dummy1 Dummy2 Dummy3
        if Dummy2 == true
        then
            if Dummy1 == 0 // gender flag
            then 0AB1: @RelocateActor 4 actor PornActress gender 0 pose SexPoseInt place SexPlace
            else 0AB1: @RelocateActor 4 actor PornActor gender 1 pose SexPoseInt place SexPlace
            end
            0AB1: @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SpeedState
        end
        if Dummy3 == 1
        then
            0AB1: @RelocateActor 4 actor PornActress gender 0 pose SexPoseInt place SexPlace
            0AB1: @RelocateActor 4 actor PornActor gender 1 pose SexPoseInt place SexPlace
            0AB1: @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SpeedState
        end
    end
    if SexMenuState == 0
    then
        if PulseButtonState == PULSED_ENTER_VEH
        then break // End Sex Activity
        end
        if 0AB1: @CursorClickCheck 4 box_position 71.0 19.0 box_size 105.0 13.0
        then break // End Sex Activity
        end
    end
    if ShowSexualStats==true
    then
        0AB1: @ShowSexualStats 3 SexStat_Climax SexStat_Speed SexStat_Pleasure
        0AB1: @ShowSettingTexts 4 SexMenuState SpeedState SexPoseInt SexPlace
    end
    gosub @SexualMenuMachine
end

:CmSexEnd
OnSexActivity = true
gosub @ToggleSexMachine
return

:CmSexCleanUp
$ONMISSION = 0
return

{======================================================================
======================================================================}
:SetDrawText
const
    DwTx_Font = 0@
    DwTx_Linewidth = 1@
    DwTx_SizeX = 2@
    DwTx_SizeY = 3@
    DwTx_PosX = 4@
    DwTx_PosY = 5@
    DwTx_gxt1 = 6@
    DwTx_gxt2 = 7@
    DwTx_Gxt = 6@s
end
0349: set_text_draw_font DwTx_Font
0343: set_text_draw_linewidth DwTx_Linewidth
033F: set_text_draw_letter_size DwTx_SizeX DwTx_SizeY
033E: set_draw_text_position DwTx_PosX DwTx_PosY GXT DwTx_Gxt
0AB2: ret 0

:SetDrawTextRGB
0340: set_text_draw_RGBA 8@ 9@ 10@ 255
0349: set_text_draw_font DwTx_Font
0343: set_text_draw_linewidth DwTx_Linewidth
033F: set_text_draw_letter_size DwTx_SizeX DwTx_SizeY
033E: set_draw_text_position DwTx_PosX DwTx_PosY GXT DwTx_Gxt
0AB2: ret 0

:SetDrawTextRGB_1Number
0340: set_text_draw_RGBA 8@ 9@ 10@ 255
0349: set_text_draw_font DwTx_Font
0343: set_text_draw_linewidth DwTx_Linewidth
033F: set_text_draw_letter_size DwTx_SizeX DwTx_SizeY
045A: draw_text_1number DwTx_PosX DwTx_PosY GXT DwTx_Gxt number 11@
0AB2: ret 0

{======================================================================
======================================================================}
:IncOrDecIntVariable
const
    IncOrDec_Variable = 0@
    IncOrDec_MinValue = 1@
    IncOrDec_MaxValue = 2@
    IncOrDec_Flag = 3@
end
if 0039:   IncOrDec_Flag == FLAG_INCREASE
then
    if 002D:   IncOrDec_Variable >= IncOrDec_MaxValue  // (int)
    then 0085: IncOrDec_Variable = IncOrDec_MinValue // (int)
    else IncOrDec_Variable++
    end
else // FLAG_DECREASE
    if 002D:   IncOrDec_MinValue >= IncOrDec_Variable  // (int)
    then 0085: IncOrDec_Variable = IncOrDec_MaxValue // (int)
    else IncOrDec_Variable--
    end
end
0AB2: ret 1 IncOrDec_Variable

{======================================================================
======================================================================}
:ToggleSexMachine
if OnSexActivity == false
then
    fade 0 time 800
    wait 800 ms
    01B4: set_player $PLAYER_CHAR can_move 0
    0581: enable_radar 0
    0826: enable_hud 0
    03F0: enable_text_draw 1
    03E0: draw_text_behind_textures 1
    0AB1: @StorePlayerData 0
    077E: get_active_interior_to Dummy1
    if Dummy1 == 0
    then
        04BB: select_interior 8
        0860: link_actor $PLAYER_ACTOR to_interior 8
        00A1: put_actor $PLAYER_ACTOR at 2364.344 -1136.4468 1051.0762
        0619: enable_actor $PLAYER_ACTOR collision_detection 0
        04E4: unknown_refresh_game_renderer_at 2364.344 -1136.4468
        03CB: set_rendering_origin_at 2364.344 -1136.4468 1051.0762
        //04F9: set_interior 8 color_to 0
    end
    //SexPoseInt = SEX_FUCKING
    //SexPlace = PL_TABLE
    SexBodyType = BT_NORMAL
    0AB1: @StoreInt 2 @SxMn_Pose SexPoseInt
    0AB1: @StoreInt 2 @SxMn_Place SexPlace
    //0209: SexPoseInt = random_int_in_ranges ? ?
    0AB1: call_scm_func @GenerateActors 2 SexPoseInt SexPlace ret PornActress PornActor
    0AB1: call_scm_func @GenerateSexFiles 2 SexPoseInt SexPlace
    0AB1: call_scm_func @PutPlayerIntoScene 2 SexPoseInt SexPlace
    0AB1: call_scm_func @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SPD_SLOW
    0AB1: call_scm_func @ToggleSexualCamera 2 SexPoseInt SexPlace
    SexMenuState=0
    OnSexActivity = true
    SexState = 0
    ShowSexualStats = true
    SexStat_Climax = 0.0
    //SexStat_Speed = 40
    SexStat_Pleasure = 1
    ClimaxState = 0
    PleasureState = 0
    PulseButtonState = NOT_PULSED
    0AB1: @InitCursorControl 0
    wait 500
    fade 1 time 800
    wait 500
    01B4: set_player $PLAYER_CHAR can_move 1
else
    fade 0 time 800
    wait 800 ms
    0581: enable_radar 1
    0826: enable_hud 1
    03F0: enable_text_draw 0
    0AB1: @RecoverPlayerPosition 0 Dummy1 Dummy2 Dummy3
    0AB1: @RecoverPlayerInterior 0 Dummy4
    04BB: select_interior Dummy4
    0619: enable_actor $PLAYER_ACTOR collision_detection 1
    0860: link_actor $PLAYER_ACTOR to_interior Dummy4
    00A1: put_actor $PLAYER_ACTOR at Dummy1 Dummy2 Dummy3
    0373: set_camera_directly_behind_player
    02EB: restore_camera_with_jumpcut
    009B: destroy_actor PornActress
    009B: destroy_actor PornActor
    01B4: set_player $PLAYER_CHAR can_move 1
    OnSexActivity=false
    SexMenuState=0
    ShowSexualStats=false
    wait 500
    fade 1 time 800
end
return

{======================================================================
======================================================================}
:SexMachine
// Mouse cursor control
0AB1: @CursorControl 0

if SexState == 0
then
    if //or
    //00E1:   player 0 pressed_key PAD_CHANGE_CAMERA_VIEW // V
    0AB1: @CursorClickCheck 4 box_position 203.0 395.0 box_size 72.0 11.0
    then SexState=1
        0AB1: @GetInt 1 @CameraMode Dummy1
        0AB1: @IncOrDecIntVariable 4 var_to_increase Dummy1 min_value 0 max_value 2 flag FLAG_INCREASE store_into Dummy1
        0AB1: @StoreInt 2 @CameraMode Dummy1
        0AB1: call_scm_func @ToggleSexualCamera 2 SexPoseInt SexPlace
    end
    if or
    SexMenuState == 0
    SexMenuState == 1
    then
        if 0AB1: @CursorClickCheck 4 box_position 76.0 436.0 box_size 143.0 13.0 // Change Position button
        then 0AB1: @ToggleVariable 3 toggle_var SexMenuState toggle_values 0 1 store_in SexMenuState
        end
    end
    if SexMenuState == 0
    then
        if 0AB1: @CursorClickCheck 4 box_position 76.0 416.0 box_size 143.0 13.0 // Actors Offsets button
        then 0AB1: @ToggleVariable 3 toggle_var SexMenuState toggle_values 0 2 store_in SexMenuState
        end
    end
    if 0AB1: @CursorClickCheck 4 box_position 318.0 395.0 box_size 70.0 12.0 // Change pose animation
    then
        0AB1: @GetInt 1 @CurrentAnimation Dummy1
        0AB1: call_scm_func @ReadSexPosesInfo 3 SpeedState SexPoseInt SexPlace out Dummy3 Dummy4 Dummy2
        0AB1: @IncOrDecIntVariable 4 var_to_increase Dummy1 min_value 1 max_value Dummy2 flag FLAG_INCREASE store_into Dummy1
        0AB1: @StoreInt 2 @CurrentAnimation Dummy1
        0AB1: call_scm_func @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SpeedState
    end

    0AB1: @GetInt 1 @CameraMode Dummy1
    if Dummy1 == 1 // Fixed Camera
    then
        0494: get_joystick 0 data_to MoveAxisX MoveAxisY SpAxisX SpAxisY
        if 0018:   SpAxisX > 100 // RIGHT
        then SexState = 4
            0AB1: @GetInt 1 @CurrentCamera MoveAxisY
            0AB1: call_scm_func @IncOrDecIntVariable 4 MoveAxisY 0 11 FLAG_INCREASE MoveAxisY
            0AB1: @StoreInt 2 @CurrentCamera MoveAxisY
            0AB1: call_scm_func @ToggleSexualCamera 2 SexPoseInt SexPlace
        end
        if 001A:   -100 > SpAxisX // LEFT
        then SexState = 5
            0AB1: @GetInt 1 @CurrentCamera MoveAxisY
            0AB1: @IncOrDecIntVariable 4 var_to_increase MoveAxisY min_value 0 max_value 11 flag FLAG_DECREASE store_into MoveAxisY
            0AB1: @StoreInt 2 @CurrentCamera MoveAxisY
            0AB1: call_scm_func @ToggleSexualCamera 2 SexPoseInt SexPlace
        end
        if 0AB1: @CursorClickCheck 4 box_position 247.0 395.0 box_size 13.0 12.0
        then
            0AB1: @GetInt 1 @CurrentCamera MoveAxisY
            0AB1: @IncOrDecIntVariable 4 var_to_increase MoveAxisY min_value 0 max_value 11 flag FLAG_DECREASE store_into MoveAxisY
            0AB1: @StoreInt 2 @CurrentCamera MoveAxisY
            0AB1: call_scm_func @ToggleSexualCamera 2 SexPoseInt SexPlace
        end
        if 0AB1: @CursorClickCheck 4 box_position 263.0 395.0 box_size 13.0 12.0
        then
            0AB1: @GetInt 1 @CurrentCamera MoveAxisY
            0AB1: call_scm_func @IncOrDecIntVariable 4 MoveAxisY 0 11 FLAG_INCREASE MoveAxisY
            0AB1: @StoreInt 2 @CurrentCamera MoveAxisY
            0AB1: call_scm_func @ToggleSexualCamera 2 SexPoseInt SexPlace
        end
    end
end
if SexState == 1
then
    if 80E1:   not player 0 pressed_key PAD_CHANGE_CAMERA_VIEW
    then SexState=0
    end
end
if SexState == 2
then
    if 80E1:   not player 0 pressed_key PAD_ANSWER_PHONE
    then SexState=0
    end
end
if SexState == 4
then
    if 8018:   not SpAxisX > 100
    then SexState = 0
    end
end
if SexState == 5
then
    if 801A:   not -100 > SpAxisX
    then SexState = 0
    end
end

// Increase / Decrease Speed
if 00E1:   player 0 pressed_key PAD_PREV_WEP_ZOOM_IN
then 0AB1: call_scm_func @IncOrDecPercentageIntStat 3 SexStat_Speed 4 FLAG_INCREASE SexStat_Speed
end
if 00E1:   player 0 pressed_key PAD_NEXT_WEP_ZOOM_OUT
then 0AB1: call_scm_func @IncOrDecPercentageIntStat 3 SexStat_Speed 4 FLAG_DECREASE SexStat_Speed
end

// Increase Pleasure
0AB1: @PleasureMachine 3 SexStat_Pleasure PleasureState SexStat_Speed ret SexStat_Pleasure PleasureState

// Increase Climax
0AB1: @ClimaxMachine 3 SexStat_Climax ClimaxState SexStat_Speed ret SexStat_Climax ClimaxState

// Change from stopped to slow or fast
gosub @SpeedMachine

// Buttons UP - DOWN - ACCEPT - CANCEL acknowledge
gosub @PulseButtonMachine

// First Person Camera control
0AB1: @FirstPersonCameraControl 0
return

{======================================================================
======================================================================}
:Pleasure_LastEventTime
hex
00 00 00 00
end
:Pleasure_CurrentEventTime
hex
00 00 00 00
end

{======================================================================
======================================================================}
:PleasureMachine // pleasure 0@ pleasure_state 1@ speed 2@
0AB1: @GetData 1 @Pleasure_LastEventTime 20@
0AB1: @GetData 1 @Pleasure_CurrentEventTime 21@
0209: 10@ = random_int_in_ranges 1 4
if not 2@ > 13
then 0AB2: ret 2 pleasure 0@ pleasure_state 1@
end
0AB1: @IncreaseTimedVar 7 pleasure 0@ gain 10@ pleasure_state 1@ msecs 800 flag FLAG_NORMAL_INT last_event_time 20@ current_event_time 21@ ret pleasure 0@ pleasure_state 1@ last_event_time 20@ current_event_time 21@
if 1@ == 2
then 1@ = 0
end
0AB1: @StoreData 2 @Pleasure_LastEventTime 20@
0AB1: @StoreData 2 @Pleasure_CurrentEventTime 21@
0AB2: ret 2 pleasure 0@ pleasure_state 1@

{======================================================================
======================================================================}
:Climax_LastEventTime
hex
00 00 00 00
end
:Climax_CurrentEventTime
hex
00 00 00 00
end

{======================================================================
======================================================================}
:ClimaxMachine // climax 0@ climax_state 1@ speed 2@
// Speed: min: 13 - max: 100
// steps: 0.3 - min: 1 - max: 250
// steps: 0.4 - min: 1 - max: 500
// Ecuacion de la recta: Time (ms) = -5,7356321839080459770114942528736 * Speed + 574,56321839080459770114942528736
0AB1: @GetData 1 @Climax_LastEventTime 20@
0AB1: @GetData 1 @Climax_CurrentEventTime 21@
if 2@ > 13
then
    0093: 10@ = integer 2@ to_float
    10@ *= -5.735
    10@ += 574.563
    0092: 10@ = float 10@ to_integer
    11@ = 0.4
else
    10@ = 100
    11@ = -0.4
end
0AB1: @IncreaseTimedVar 7 climax 0@ gain 11@ climax_state 1@ msecs 10@ percentage_flag FLAG_PERCENTAGE_FLOAT last_event_time 20@ current_event_time 21@ ret climax 0@ climax_state 1@ last_event_time 20@ current_event_time 21@
if 1@ == 2
then 1@ = 0
end
0AB1: @StoreData 2 @Climax_LastEventTime 20@
0AB1: @StoreData 2 @Climax_CurrentEventTime 21@
0AB2: ret 2 climax 0@ climax_state 1@

{======================================================================
======================================================================}
:ToggleVariable // 0@: Toggle Variable, 1@ 2@: Toggle Values
if 003B:   0@ == 1@  // (int)
then 0085: 0@ = 2@ // (int)
else 0085: 0@ = 1@ // (int)
end
0AB2: ret 1 0@

{======================================================================
======================================================================}
:IncOrDecPercentageIntStat // 0@: stat, 1@: amount, 2@: inc or dec flag
if 2@ == FLAG_INCREASE
then
    005A: 0@ += 1@  // (int)
    if 0@ > 100
    then 0AB2: ret 1 100
    end
else // FLAG_DECREASE
    0062: 0@ -= 1@  // (int)
    if 1 > 0@
    then 0AB2: ret 1 1
    end
end
0AB2: ret 1 0@

{======================================================================
======================================================================}
:IncOrDecPercentageFloatStat
const
    FtSt_Stat = 0@
    FtSt_Amount = 1@
    FtSt_IncOrDec = 2@
end
if FtSt_IncOrDec == FLAG_INCREASE
then 005B: FtSt_Stat += FtSt_Amount  // (float)
else 0062: FtSt_Stat -= FtSt_Amount  // (int)
end
if FtSt_Stat > 100.0
then 0AB2: ret 1 100.0
end
if 1.0 > FtSt_Stat
then 0AB2: ret 1 1.0
end
0AB2: ret 1 FtSt_Stat

{======================================================================
======================================================================}
:IncreaseTimedVar
const
    IcTm_Var = 0@
    IcTm_Amount = 1@
    IcTm_Stat = 2@
    IcTm_msec = 3@
    IcTm_PercentageFlag = 4@
    IcTm_LastTime = 5@
    IcTm_CurrentTime = 6@
end
if IcTm_Stat == 0
then
    0085: IcTm_LastTime = 32@ // (int)
    005A: IcTm_LastTime += IcTm_msec  // (int)
    IcTm_Stat=1
end
if IcTm_Stat == 1
then
    0085: IcTm_CurrentTime = 32@ // (int)
    if 002D:   IcTm_CurrentTime >= IcTm_LastTime  // (int)
    then
        if IcTm_PercentageFlag == FLAG_NORMAL_INT
        then 005A: IcTm_Var += IcTm_Amount  // (int)
        end
        if IcTm_PercentageFlag == FLAG_NORMAL_FLOAT
        then 005B: IcTm_Var += IcTm_Amount  // (float)
        end
        if IcTm_PercentageFlag == FLAG_PERCENTAGE_INT
        then 0AB1: call_scm_func @IncOrDecPercentageIntStat 3 IcTm_Var IcTm_Amount FLAG_INCREASE IcTm_Var
        end
        if IcTm_PercentageFlag == FLAG_PERCENTAGE_FLOAT
        then 0AB1: call_scm_func @IncOrDecPercentageFloatStat 3 IcTm_Var IcTm_Amount FLAG_INCREASE IcTm_Var
        end
        IcTm_Stat=2
    end
end
0AB2: ret 4 IcTm_Var IcTm_Stat IcTm_LastTime IcTm_CurrentTime

{======================================================================
======================================================================}
:SpeedMachine
if and
not SpeedState == 3
SexStat_Speed >= SPD_THRESHOLD3
then
    SpeedState=3
    0AB1: @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SPD_FAST
end
if and
not SpeedState == 2
SexStat_Speed < SPD_THRESHOLD3
SexStat_Speed >= SPD_THRESHOLD2
then
    SpeedState=2
    0AB1: @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SPD_NORMAL
end
if and
not SpeedState == 1
SexStat_Speed < SPD_THRESHOLD2
SexStat_Speed >= SPD_THRESHOLD1
then
    SpeedState=1
    0AB1: @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SPD_SLOW
end
if and
not SpeedState == 0
SexStat_Speed < SPD_THRESHOLD1
then
    SpeedState=0
    0AB1: @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SPD_IDLE
end
return

{======================================================================
======================================================================}
:ChangePoseAndPlace
fade 0 time 800
wait 800 ms
015F: set_camera_position 0.0 0.0 0.0 rotation 0.0 0.0 0.0
0160: set_camera_point_at 0.0 0.0 0.0 switchstyle 2
009B: destroy_actor PornActress
009B: destroy_actor PornActor
0AB1: call_scm_func @GenerateActors 2 SexPoseInt SexPlace ret PornActress PornActor
0AB1: call_scm_func @GenerateSexFiles 3 SexPoseInt SexPlace SexBodyType
0AB1: call_scm_func @PutPlayerIntoScene 2 SexPoseInt SexPlace
0AB1: call_scm_func @LoadSexualPose 5 PornActress PornActor SexPoseInt SexPlace SPD_SLOW
0AB1: call_scm_func @ToggleSexualCamera 2 SexPoseInt SexPlace
SexStat_Speed = 40
wait 500
fade 1 time 800
return

{======================================================================
======================================================================}
:SexualMenuMachine
// Is current selector on left menu items ?
if and
0029:   SexMenuState >= SX_MENU_LEFT_FIRST_ELEM
002B:   SX_MENU_LEFT_LAST_ELEM >= SexMenuState  // (int)
then
    if PulseButtonState == PULSED_ENTER_VEH
    then SexMenuState = 0 // Close Sexual Menu
    end
end

if or
PulseButtonState == PULSED_UP
PulseButtonState == PULSED_DOWN
PulseButtonState == PULSED_SPRINT
PulseButtonState == PULSED_ENTER_VEH
then PulseButtonState++
end
return

{======================================================================
======================================================================}
:PulseButtonMachine
0494: get_joystick 0 data_to MoveAxisX MoveAxisY SpAxisX SpAxisY

if PulseButtonState == NOT_PULSED
then
    if 0018:   MoveAxisY > 100 // UP
    then PulseButtonState = PULSED_UP
    end
    if 001A:   -100 > MoveAxisY // DOWN
    then PulseButtonState = PULSED_DOWN
    end
    if 00E1:   player 0 pressed_key PAD_SPRINT
    then PulseButtonState = PULSED_SPRINT
    end
    if 00E1:   player 0 pressed_key PAD_ENTER_VEHICLE
    then PulseButtonState = PULSED_ENTER_VEH
    end
end

if and
PULSED_UP_F >= PulseButtonState
PulseButtonState > PULSED_UP
then
    if 8018:   not MoveAxisY > 100 // UP
    then PulseButtonState = NOT_PULSED
    end
end

if and
PULSED_DOWN_F >= PulseButtonState
PulseButtonState > PULSED_DOWN
then
    if 801A:   not -100 > MoveAxisY // DOWN
    then PulseButtonState = NOT_PULSED
    end
end

if and
PULSED_SPRINT_F >= PulseButtonState
PulseButtonState > PULSED_SPRINT
then
    if 80E1:   not player 0 pressed_key PAD_SPRINT
    then PulseButtonState = NOT_PULSED
    end
end

if and
PULSED_ENTER_VEH_F >= PulseButtonState
PulseButtonState > PULSED_ENTER_VEH
then
    if 80E1:   not player 0 pressed_key PAD_ENTER_VEHICLE
    then PulseButtonState = NOT_PULSED
    end
end
return

