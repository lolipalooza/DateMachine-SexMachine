{======================================================================
======================================================================}
{
Save/load format
interior(long string)(4bytes*4), fem_xyza (4bytes*4), male_xyza (4bytes*4), pose, place, slot
interiors: ABATOIR,AMMUN1,CARMOD1,FDREST1,GF1,JETINT,LACS1,LAHS1B,MAFCAS,MAFCAS2,SMASHTV,SVVGHO1,SWEETS,TSDINER,WUZIBET,BARBERS,BDUPS1,CARMOD2,CARTER,GF2,LAHS1A,LASTRIP,RYDERS,SVVGHO2,VGHSB1,VGHSB3,BARBER2,BDUPS,BIKESCH,BROTHL1,CARLS,CARMOD3,CHANGER,CSSPRT,DRIVES,DRIVES2,GENOTB,GF3,LAHSB4,OGLOCS,PAPER,PDOMES,PDOMES2,POLICE3,SEXSHOP,S1TEST,STRIP2,STUDIO,TATTO3,AMMUN2,DINER1,DIRBIKE,GF4,LAHS2A,LAHSS6,SFHSM2,X711S2,CSDESGN,DINER2,FDPIZA,GANG,GF5,GYM1,LACRAK,LAHSB3,MADDOGS,MDDOGS,SFHSB1,SVHOT1,VGHSM2,AMMUN3,AMMUN5,BROTHEL,GF6,GYM2,LAHSB1,POLICE1,RCPLAY,REST2,SFHSB2,SFHSS2,SVCUNT,SVSFSM,X7_11S,8TRACK,AMMUN4,GYM3,LAHSB2,OFTEST,BURHOUS,SFHSS1,SVLAMD,FDCHICK,LAHS2B,SFHSB3,SVGNMT2,SVVGMD,DESHOUS,FDBURG,POLICE2,SVGNMT1,TRICAS,SVSFMD,VGHSM3,X711S3,BAR2,SVLASM,BARBER3,MOROOM,SVLABIG,CSEXL,AIRPOR2,AIRPORT,CSCHP,MOTEL1,SFHSM1,VGHSS1,VGSHM2,VGSHM3,VGSHS2,TATTOO,X7_11C,BAR1,DAMIN,FDDONUT,TATTO2,X7_11D,ATRIUME,ATRIUMX,CLOTHGP,GENWRHS,UFOBAR,X7_11B
}

:WriteLineInFile // inputs 20 file 0@ interior 1@ 2@ 3@ 4@ pose 5@ place 6@ center_xyz 7@ 8@ 9@ fem_xyza 10@ 11@ 12@ 13@ male_xyza 14@ 15@ 16@ 17@ slot 18@ in_use 19@
//0AD9: write_formatted_text "interior %s pose %d place %d center_xyz %f %f %f fem_xyza %f %f %f %f " in_file 0@ values 1@v pose 5@ place 6@ center_xyz 7@ 8@ 9@ fem_xyza 10@ 11@ 12@ 13@
0AD9: write_formatted_text "interior %s " in_file 0@ 1@v
0AD9: write_formatted_text "pose %d " in_file 0@ 5@
0AD9: write_formatted_text "place %d " in_file 0@ 6@
0AD9: write_formatted_text "center_xyz %f %f %f " in_file 0@ 7@ 8@ 9@
0AD9: write_formatted_text "fem_xyza %f %f %f %f " in_file 0@ 10@ 11@ 12@ 13@
//0AD9: write_formatted_text "male_xyza %f %f %f %f slot %d in_use %d%c%c" in_file 0@ values male_xyza 14@ 15@ 16@ 17@ slot 18@ in_use 19@ line_break 0xd 0xa
0AD9: write_formatted_text "male_xyza %f %f %f %f " in_file 0@ 14@ 15@ 16@ 17@
0AD9: write_formatted_text "slot %d " in_file 0@ 18@
0AD9: write_formatted_text "in_use %d" in_file 0@ 19@
0AD9: write_formatted_text "%c%c" in_file 0@ 0xd 0xa
0AB2: ret 0

:ReadLineFromFile // inputs 1 file 0@
0ADA: 1@ = scan_file 0@ format "interior %s pose %d place %d center_xyz %f %f %f fem_xyza %f %f %f %f male_xyza %f %f %f %f slot %d in_use %d" 2@v pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@ //IF and SET
if 1@ > 0
then 0485:  return_true
else 059A:  return_false
end
0AB2: ret 19 interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@

{======================================================================
======================================================================}
:InternalDataStorage
hex
// Long string interior name            Pose    Place   Center XYZ                      Female XYZA                             Male XYZA                               Slot    In use
//       (4)      (8)      (12)         (16)    (17)    (18)     (22)     (26)          (30)     (34)     (38)     (42)         (46)     (50)     (54)     (58)         (62)    (63)
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      1      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      2      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      3      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      4      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      5      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      6      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      7      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      8      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000      9      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000     10      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000     11      00
00000000 00000000 00000000 00000000     00      00      00000000 00000000 00000000      00000000 00000000 00000000 00000000     00000000 00000000 00000000 00000000     12      00
end

{======================================================================
======================================================================}
:WriteLineInIntStorage // inputs 20 slot_to_use 0@ interior 1@ 2@ 3@ 4@ pose 5@ place 6@ center_xyz 7@ 8@ 9@ fem_xyza 10@ 11@ 12@ 13@ male_xyza 14@ 15@ 16@ 17@ slot 18@ in_use 19@
0AC6: 30@ = label @InternalDataStorage offset
0085: 31@ = 0@ // (int)          // slot_to_use goes from 1 to 12
31@--
31@ *= 64
005A: 30@ += 31@  // (int)       // 30@ + slot_id * 64, where slot_id goes from 0 to 11

// Interior name
0A8C: write_memory 30@ size 4 value 1@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 2@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 3@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 4@ virtual_protect 0
30@+=4

// Pose
0A8C: write_memory 30@ size 1 value 5@ virtual_protect 0
30@++

// Place
0A8C: write_memory 30@ size 1 value 6@ virtual_protect 0
30@++

// Center XYZ
0A8C: write_memory 30@ size 4 value 7@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 8@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 9@ virtual_protect 0
30@+=4

// Female XYZA
0A8C: write_memory 30@ size 4 value 10@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 11@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 12@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 13@ virtual_protect 0
30@+=4

// Male XYZA
0A8C: write_memory 30@ size 4 value 14@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 15@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 16@ virtual_protect 0
30@+=4
0A8C: write_memory 30@ size 4 value 17@ virtual_protect 0
30@+=4

// Slot
0A8C: write_memory 30@ size 1 value 18@ virtual_protect 0
30@++

// In use
0A8C: write_memory 30@ size 1 value 19@ virtual_protect 0
30@++
0AB2: ret 0

{======================================================================
======================================================================}
:ReadLineFromIntStorage // inputs 1 slot_to_read 0@
0AC6: 30@ = label @InternalDataStorage offset
0085: 31@ = 0@ // (int)          // slot_to_use goes from 1 to 12
31@--
31@ *= 64
005A: 30@ += 31@  // (int)       // 30@ + slot_id * 64, where slot_id goes from 0 to 11

// Interior name
0A8D: 2@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 3@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 4@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 5@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4

// Pose
0A8D: 6@ = read_memory 30@ size 1 virtual_protect 0
30@++

// Place
0A8D: 7@ = read_memory 30@ size 1 virtual_protect 0
30@++

// Center XYZ
0A8D: 8@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 9@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 10@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4

// Female XYZA
0A8D: 11@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 12@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 13@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 14@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4

// Male XYZA
0A8D: 15@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 16@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 17@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4
0A8D: 18@ = read_memory 30@ size 4 virtual_protect 0
30@ += 4

// Slot
0A8D: 19@ = read_memory 30@ size 1 virtual_protect 0
30@++

// In use
0A8D: 20@ = read_memory 30@ size 1 virtual_protect 0
30@++
0AB2: ret 19 interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@

{======================================================================
======================================================================}
:SaveData // Entries: none
0A9A: 30@ = openfile LOG_FILE mode "wb+"  // IF and SET

// Duplicate save file as a file to read
if 0AAB:   file_exists SAVE_FILE
then
    0B04: copy_file SAVE_FILE to TEMP_FILE //IF and SET
else
    0A9A: 1@ = openfile TEMP_FILE mode "wb+"  // IF and SET
    0A9B: closefile 1@
end

// Read from temp_file and write in save_file
0A9A: 0@ = openfile SAVE_FILE mode "wb+"  // IF and SET
0A9A: 1@ = openfile TEMP_FILE mode "rb"  // IF and SET

094B: 22@v = get_active_interior_name_from_actor $PLAYER_ACTOR // 16-byte string
077E: get_active_interior_to 26@
0AD9: write_formatted_text "Active interior: %d - %s%c%c" in_file 30@ 26@ 22@v 0xd 0xa

if 22@v == ""
then
    if 26@ == 0
    then 22@v = "EXTERIOR"
    else 22@v = "UNKNOWN"
    end
end

repeat
    if 0AB1: @ReadLineFromFile 1 1@ returned_values interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@
    then // Data read successfully, continue
    else break
    end
    0AD9: write_formatted_text "Reading from file: interior %s pose %d place %d center_xyz %f %f %f " in_file 30@ interior 2@v pose 6@ place 7@ center_xyz 8@ 9@ 10@
    0AD9: write_formatted_text "fem_xyza %f %f %f %f " in_file 30@ fem_xyza 11@ 12@ 13@ 14@
    0AD9: write_formatted_text "male_xyza %f %f %f %f slot %d in_use %d%c%c" in_file 30@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@ 0xd 0xa
    if 2@v == 22@v
    then
        31@ = 1 // Report that data from internal storage will be saved
        0AD9: write_formatted_text "Check! 2@v == 22@v (%s)%c%c" in_file 30@ 22@v 0xd 0xa
        gosub @SaveDataFromInternalStorage
    else
        0AD9: write_formatted_text "Writing line in save file...%c%c" in_file 30@ 0xd 0xa
        0AB1: @WriteLineInFile 20 file 0@ interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@
    end
until false

if 31@ == 0 // data from internal storage is not saved yet?
then gosub @SaveDataFromInternalStorage
end

0AD9: write_formatted_text "%c%cEND%c%c" in_file 30@ 0xd 0xa 0xd 0xa
0A9B: closefile 1@
0A9B: closefile 0@
0A9B: closefile 30@
0B00: delete_file TEMP_FILE  // IF and SET
0AB2: ret 0


:SaveDataFromInternalStorage
0AD9: write_formatted_text "%c%cSaving data from internal storage...%c%c" in_file 30@ 0xd 0xa 0xd 0xa
for 27@ = 1 to 12
    0AB1: @ReadLineFromIntStorage 1 slot_to_read 27@ returned_values interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@
    0AD9: write_formatted_text "Reading from storage: interior %s pose %d place %d center_xyz %f %f %f " in_file 30@ interior 2@v pose 6@ place 7@ center_xyz 8@ 9@ 10@
    0AD9: write_formatted_text "fem_xyza %f %f %f %f " in_file 30@ fem_xyza 11@ 12@ 13@ 14@
    0AD9: write_formatted_text "male_xyza %f %f %f %f slot %d in_use %d" in_file 30@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@ 0xd 0xa
    if 2@v == ""
    then 0AD9: write_formatted_text "... Not data found in slot %d%c%c" in_file 30@ 27@ 0xd 0xa
    else
        0AD9: write_formatted_text "%c%c" in_file 30@ 0xd 0xa
        0AB1: @WriteLineInFile 20 file 0@ interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 27@ in_use 20@
    end
end
return

{======================================================================
======================================================================}
:LoadData // entries: none
if 0AAB:   file_exists SAVE_FILE
then 0A9A: 0@ = openfile SAVE_FILE mode "rb"  // IF and SET
else 0AB2: ret 0
end

094B: 22@v = get_active_interior_name_from_actor $PLAYER_ACTOR // 16-byte string
077E: get_active_interior_to 26@
if 22@v == ""
then
    if 26@ == 0
    then 22@v = "EXTERIOR"
    else 22@v = "UNKNOWN"
    end
end

// Clean internal storage
for 27@ = 1 to 12
0AB1: @WriteLineInIntStorage 20 slot_to_use 27@ interior 0 0 0 0 pose 0 place 0 center_xyz 0.0 0.0 0.0 fem_xyza 0.0 0.0 0.0 0.0 male_xyza 0.0 0.0 0.0 0.0 slot 0 in_use 0
end

repeat
    if 0AB1: @ReadLineFromFile 1 0@ returned_values interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@
    then // Data read successfully, continue
    else break
    end
    if 2@v == 22@v
    then 0AB1: @WriteLineInIntStorage 20 slot_to_use 19@ interior 2@ 3@ 4@ 5@ pose 6@ place 7@ center_xyz 8@ 9@ 10@ fem_xyza 11@ 12@ 13@ 14@ male_xyza 15@ 16@ 17@ 18@ slot 19@ in_use 20@
    end
until false

0A9B: closefile 0@
0AB2: ret 0
